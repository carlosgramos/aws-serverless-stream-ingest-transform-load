AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Firehose Architecture

Parameters:
  pFirehoseBufferSize:
    Description: The size of the buffer, in MBs, that Kinesis Firehose uses for incoming data
      before delivering it to the destination.
    Type: Number
    Default: '100'
    MinValue: '1'
    MaxValue: '128'
    ConstraintDescription: must be between 1 and 128
  
  pFirehoseBufferInterval:
    Description: The length of time, in seconds, that Kinesis Firehose buffers incoming data
      before delivering it to the destination.
    Type: Number
    Default: '300'
    MinValue: '60'
    MaxValue: '900'
    ConstraintDescription: must be between 60 and 900

Resources:
  rIngestBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: Private
  
  rOutputBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: Private
  
  rIngestStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: 'IngestStream'
      DeliveryStreamType: 'DirectPut'
      ExtendedS3DestinationConfiguration:
        RoleARN: !GetAtt FirehoseDeliveryRole.Arn
        BucketARN: !GetAtt OutputBucket.Arn
        Prefix: 'transformed/'
        BufferingHints:
          SizeInMBs: !Ref FirehoseBufferSize
          IntervalInSeconds: !Ref FirehoseBufferInterval
        CompressionFormat: 'UNCOMPRESSED'
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Type: 'Lambda'
              Parameters:
                - ParameterName: 'LambdaArn'
                  ParameterValue: !GetAtt FirehoseTransform.Arn
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: '/aws/kinesisfirehose/IngestStream'
          LogStreamName: S3Delivery

  # This needs to be a separate policy as it references IngestStream.
  # This avoids a circular dependency between IngestStream and FirehoseDeliveryRole
  rCWLPutLogs:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CWL_PutLogs
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:PutLogEvents
          Resource:
          - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/${IngestStream}:log-stream:*'
      Roles:
      - !Ref FirehoseDeliveryRole

  #Firehose needs access to our S3 Output bucket
  rFirehoseS3DeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - firehose.amazonaws.com
          Action:
          - sts:AssumeRole
          Condition:
            StringEquals:
              sts:ExternalId: !Ref AWS::AccountId
      Policies:
      - PolicyName: Lambda_Invoke_Transform
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - lambda:InvokeFunction
            - lambda:GetFunctionConfiguration
            Resource:
            - !GetAtt FirehoseTransform.Arn
      - PolicyName: S3_ReadWrite_OutputBucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:AbortMultipartUpload
            - s3:GetBucketLocation
            - s3:GetObject
            - s3:ListBucket
            - s3:ListBucketMultipartUploads
            - s3:PutObject
            Resource:
            - !Sub 'arn:aws:s3:::${rOutputBucket}/*'
            - !Sub 'arn:aws:s3:::${rOutputBucket}'

  rFirehoseIngestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: firehoseIngest.lambda_handler
      Runtime: python3.6
      CodeUri: lambda/
      FunctionName: FirehoseTransform
      Description: Triggered by an S3 put event, it feeds data into Firehose 
      MemorySize: 1536
      Timeout: 300
      Tracing: Active
      Policies:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetBucketLocation
            - s3:GetObject
            - s3:ListBucket
            Resource:
            - !Sub 'arn:aws:s3:::${rIngestBucket}/*'
            - !Sub 'arn:aws:s3:::${rIngestBucket}'
          - Effect: Allow
            Action:
            - firehose:PutRecord
            Resource: !GetAtt rIngestStream.Arn
      Environment:
        Variables:
          INGEST_STREAM: !Ref rIngestStream
      Events:
        Type: 'S3'
        Properties:
          Bucket: !Ref rIngestBucket
          Events: s3:ObjectCreated:*
  
  rFirehoseTransformFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: firehoseTransform.lambda_handler
      Runtime: python3.6
      CodeUri: lambda/
      FunctionName: FirehoseTransform
      Description: Transforms and enriches messages ingested by a Firehose delivery stream
      MemorySize: 1536
      Timeout: 300
      Tracing: Active
      Policies:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - firehose:PutRecord
            Resource: !GetAtt rIngestStream.Arn

Outputs:
  oOutputBucketName:
    Value: !Ref 'rOutputBucket'
    Description: S3 bucket for transformed records and source record backups
  oFirehoseIngestFunction:
    Value: !Ref 'rFirehoseIngestFunction'
    Description: Name of FirehoseIngest Lambda function
  oFirehoseTransformFunctionName:
    Value: !Ref 'rFirehoseTransformFunction'
    Description: Name of FirehoseTransform Lambda function
  
